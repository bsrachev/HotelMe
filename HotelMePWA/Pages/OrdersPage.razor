@page "/orders"
@inject OrderService OrderService
@inject AuthService AuthService

<MudText Typo="Typo.h5" Class="mb-2">📦 My Orders</MudText>

@if (!isReady)
{
    <MudProgressCircular Indeterminate="true" Class="my-4" />
}
else if (!isAuth)
{
    <MudText Color="Color.Error">⛔ Please <MudLink Href="/login">log in</MudLink>.</MudText>
}
else if (orders.Count == 0)
{
    <MudText Color="Color.Secondary">You have no orders yet.</MudText>
}
else
{
    @foreach (var o in orders)
    {
        <MudPaper Class="mb-3" Elevation="1">
            <MudStack Spacing="1" Class="p-2">
                <MudText Typo="Typo.subtitle1">Order #@o.Id — @o.CreatedAt.ToLocalTime().ToString("g") — <em>@o.Status</em></MudText>
                <MudList Dense="true">
                    @foreach (var i in o.Items)
                    {
                        <MudListItem>@i.MenuItemName × @i.Quantity — $@i.Price</MudListItem>
                    }
                </MudList>
            </MudStack>
        </MudPaper>
    }
}

@code {
    private bool isAuth, isReady;
    private List<Order> orders = new();

    protected override async Task OnInitializedAsync()
    {
        isAuth = await AuthService.IsUserAuthenticated();
        if (isAuth)
        {
            orders = await OrderService.GetMyOrders();
        }
        isReady = true;
    }
}
