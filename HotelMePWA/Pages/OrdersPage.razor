@page "/orders"
@using HotelMe.Shared.Models
@inject OrderService OrderService
@inject AuthService AuthService

<MudText Typo="Typo.h5" Class="mb-4">📦 My Orders</MudText>

@if (!isReady)
{
    <MudProgressCircular Indeterminate="true" Size="Size.Large" />
}
else if (!isAuth)
{
    <MudAlert Severity="Severity.Error">
        ⛔ Please <MudLink Href="login">log in</MudLink>.
    </MudAlert>
}
else if (orders.Count == 0)
{
    <MudText Color="Color.Secondary">You have no orders yet.</MudText>
}
else
{
    <MudExpansionPanels Elevation="1">
        @foreach (var o in orders)
        {
            <MudExpansionPanel Text="@($"Order #{o.Id} – {o.CreatedAt.ToLocalTime():g} – {o.Status}")">
                <ul class="mud-list">
                    @foreach (var i in o.Items)
                    {
                        <li class="mud-list-item">
                            @i.MenuItemName × @i.Quantity — $@i.Price
                        </li>
                    }
                </ul>
            </MudExpansionPanel>
        }
    </MudExpansionPanels>
}

@code {
    private bool isAuth, isReady;
    private List<Order> orders = new();

    protected override async Task OnInitializedAsync()
    {
        isAuth = await AuthService.IsUserAuthenticated();
        if (isAuth)
            orders = await OrderService.GetMyOrders();
        isReady = true;
    }
}
