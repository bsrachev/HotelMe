@inherits LayoutComponentBase
@inject AuthService AuthService
@inject NavigationManager Nav

<MudLayout>

    <MudAppBar Elevation="4">
        <MudText Typo="Typo.h6">HotelMe</MudText>
        <MudSpacer />
        @if (isAuthenticated)
        {
            <MudButton Variant="Variant.Text" OnClick="Logout">
                <MudIcon Icon="@Icons.Material.Filled.Logout" /> Изход
            </MudButton>
        }
        else
        {
            <MudButton Variant="Variant.Text"
                       OnClick='@(() => Nav.NavigateTo("/login"))'>
                <MudIcon Icon="@Icons.Material.Filled.Login" /> Вход
            </MudButton>
        }
    </MudAppBar>

    <MudDrawer Open="true"
               Variant="DrawerVariant.Mini"
               ClipMode="DrawerClipMode.Never">
        <!-- your MudNavMenu from before -->
    </MudDrawer>

    <MudMainContent>
        @Body
    </MudMainContent>

</MudLayout>

@code {
    private bool isAuthenticated;
    private string userRole;

    protected override async Task OnInitializedAsync()
    {
        isAuthenticated = await AuthService.IsUserAuthenticated();
        userRole = await AuthService.GetUserRole();
        AuthService.OnAuthStateChanged += StateHasChanged;
    }

    void Logout() => Nav.NavigateTo("/logout");

    public void Dispose()
    {
        AuthService.OnAuthStateChanged -= StateHasChanged;
    }
}
